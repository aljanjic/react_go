{"version":3,"sources":["components/Movies.js","components/Admin.js","images/movie_tickets.jpg","components/Home.js","components/OneMovie.js","components/Genres.js","components/OneGenre.js","components/form-components/Input.js","components/ui-components/Alert.js","components/Login.js","components/GraphQL.js","components/OneMovieGraphQL.js","components/form-components/Select.js","components/form-components/TextArea.js","components/EditMovieFunc.js","App.js","index.js"],"names":["Movies","state","movies","isLoaded","error","fetch","process","then","response","status","err","Error","message","setState","json","this","className","map","m","to","id","title","Component","Admin","props","jwt","history","push","pathname","Home","src","Ticket","alt","OneMovie","movie","match","params","genres","Object","values","year","mpaa_rating","index","description","runtime","Genres","genreName","genre_name","OneGenre","location","Input","htmlFor","name","type","value","onChange","handleChange","placeholder","errorDiv","errorMsg","Alert","alertType","role","alertMessage","Login","evt","target","prevState","handleSubmit","preventDefault","errors","email","password","length","data","FormData","payload","fromEntries","entries","requestOptions","method","body","JSON","stringify","alert","console","log","handleJWTChange","window","localStorage","setItem","bind","key","indexOf","onSubmit","hasError","GraphQL","searchTerm","performSearch","myHeaders","Headers","append","headers","search","theList","list","slice","OneMovieGraphQL","poster","Select","options","option","label","TextArea","rows","EditMovieFunc","useState","setMovie","setError","setErrors","setAlert","useEffect","release_date","rating","releaseDate","Date","toISOString","split","href","onClick","confirmAlert","buttons","App","logout","removeItem","t","getItem","parse","loginLink","path","component","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.34fc60c5.chunk.js","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default class Movies extends Component {\n  state = {\n    movies: [],\n    isLoaded: false,\n    error: null,\n  };\n\n  componentDidMount() {\n    fetch(`${process.env.REACT_APP_API_URL}/v1/movies`)\n      .then((response) => {\n        if (response.status !== \"200\") {\n          let err = Error;\n          err.message = \"Invalid response code: \" + response.status;\n          this.setState({ error: err });\n        }\n        return response.json();\n      })\n      .then((json) => {\n        this.setState(\n          {\n            movies: json.movies,\n            isLoaded: true,\n          },\n          (error) => {\n            this.setState({\n              isLoaded: true,\n              error,\n            });\n          }\n        );\n      });\n  }\n\n  render() {\n    const { movies, isLoaded, error } = this.state;\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <p>Loading...</p>;\n    } else {\n      return (\n        <Fragment>\n          <h2>Choose a movie</h2>\n          <hr />\n          <div className=\"list-group\">\n            {movies.map((m) => (\n              <Link\n                key={m.id}\n                className=\"list-group-item list-group-item-action\"\n                to={`/movies/${m.id}`}\n              >\n                {m.title}\n              </Link>\n            ))}\n          </div>\n        </Fragment>\n      );\n    }\n  }\n}\n","import React, { Component, Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default class Admin extends Component {\n  state = {\n    movies: [],\n    isLoaded: false,\n    error: null,\n  };\n\n  componentDidMount() {\n    if (this.props.jwt === \"\") {\n      this.props.history.push({\n        pathname: \"/login\",\n      });\n      return;\n    }\n    \n    fetch(`${process.env.REACT_APP_API_URL}/v1/movies`)\n      .then((response) => {\n        if (response.status !== \"200\") {\n          let err = Error;\n          err.message = \"Invalid response code: \" + response.status;\n          this.setState({ error: err });\n        }\n        return response.json();\n      })\n      .then((json) => {\n        this.setState(\n          {\n            movies: json.movies,\n            isLoaded: true,\n          },\n          (error) => {\n            this.setState({\n              isLoaded: true,\n              error,\n            });\n          }\n        );\n      });\n  }\n\n  render() {\n    const { movies, isLoaded, error } = this.state;\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <p>Loading...</p>;\n    } else {\n      return (\n        <Fragment>\n          <h2>Manage Catalogue</h2>\n          <hr />\n          <div className=\"list-group\">\n            {movies.map((m) => (\n              <Link\n                key={m.id}\n                className=\"list-group-item list-group-item-action\"\n                to={`/admin/movie/${m.id}`}\n              >\n                {m.title}\n              </Link>\n            ))}\n          </div>\n        </Fragment>\n      );\n    }\n  }\n}\n","export default __webpack_public_path__ + \"static/media/movie_tickets.8bbaed34.jpg\";","import React, { Component } from 'react';\nimport Ticket from \"./../images/movie_tickets.jpg\";\nimport \"./Home.css\";\n\nexport default class Home extends Component {\n\n    render() {\n        return (\n            <div className=\"text-center\">\n            <h2>This is the home page</h2>\n            <hr />\n            <img src={Ticket} alt=\"movie ticket\" />\n            </div>\n        );\n    }\n}\n","import React, { Component, Fragment } from \"react\";\n\nexport default class OneMovie extends Component {\n  state = { movie: {}, isLoaded: false, error: null };\n\n  componentDidMount() {\n    fetch(`${process.env.REACT_APP_API_URL}/v1/movie/` + this.props.match.params.id)\n      .then((response) => {\n        if (response.status !== \"200\") {\n          let err = Error;\n          err.message = \"Invalid response code: \" + response.status;\n          this.setState({ error: err });\n        }\n        return response.json();\n      })\n      .then((json) => {\n        this.setState(\n          {\n            movie: json.movie,\n            isLoaded: true,\n          },\n          (error) => {\n            this.setState({\n              isLoaded: true,\n              error,\n            });\n          }\n        );\n      });\n  }\n\n  render() {\n    const { movie, isLoaded, error } = this.state;\n    if (movie.genres) {\n        movie.genres = Object.values(movie.genres);\n    } else {\n        movie.genres = [];\n    }\n\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <p>Loading...</p>;\n    } else {\n      return (\n        <Fragment>\n          <h2>\n            Movie: {movie.title} ({movie.year})\n          </h2>\n\n            <div className=\"float-start\">\n                <small>Rating: {movie.mpaa_rating}</small>\n            </div>\n            <div className=\"float-end\">\n                {movie.genres.map((m, index) =>(\n                    <span className=\"badge bg-secondary me-1\" key={index}>\n                        {m}\n                    </span>\n                ))}\n            </div>\n            <div className=\"clearfix\"></div>\n\n            <hr />\n\n          <table className=\"table table-compact table-striped\">\n            <thead></thead>\n            <tbody>\n              <tr>\n                <td>\n                  <strong>Title:</strong>\n                </td>\n                <td>{movie.title}</td>\n              </tr>\n              <tr>\n                  <td><strong>Description:</strong></td>\n                  <td>{movie.description}</td>\n              </tr>\n              <tr>\n                <td>\n                  <strong>Run time:</strong>\n                </td>\n                <td>{movie.runtime} minutes</td>\n              </tr>\n            </tbody>\n          </table>\n        </Fragment>\n      );\n    }\n  }\n}\n","import React, { Component, Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default class Genres extends Component {\n  state = {\n    genres: [],\n    isLoaded: false,\n    error: null,\n  };\n\n  componentDidMount() {\n    fetch(`${process.env.REACT_APP_API_URL}/v1/genres`)\n      .then((response) => {\n        if (response.status !== \"200\") {\n          let err = Error;\n          err.message = \"Invalid response code: \" + response.status;\n          this.setState({ error: err });\n        }\n        return response.json();\n      })\n      .then((json) => {\n        this.setState(\n          {\n            genres: json.genres,\n            isLoaded: true,\n          },\n          (error) => {\n            this.setState({\n              isLoaded: true,\n              error,\n            });\n          }\n        );\n      });\n  }\n\n  render() {\n    const { genres, isLoaded, error } = this.state;\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <p>Loading...</p>;\n    } else {\n      return (\n        <Fragment>\n          <h2>Genres</h2>\n\n          <div className=\"list-group\">\n            {genres.map((m) => (\n              <Link\n                key={m.id}\n                className=\"list-group-item list-group-item-action\"\n                to={{\n                  pathname: `/genre/${m.id}`,\n                  genreName: m.genre_name,\n                }}\n              >\n                {m.genre_name}\n              </Link>\n            ))}\n          </div>\n        </Fragment>\n      );\n    }\n  }\n}\n","import React, { Component, Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default class OneGenre extends Component {\n  state = {\n    movies: [],\n    isLoaded: false,\n    error: null,\n    genreName: \"\",\n  };\n\n  componentDidMount() {\n    fetch(`${process.env.REACT_APP_API_URL}/v1/movies/` + this.props.match.params.id)\n      .then((response) => {\n        if (response.status !== \"200\") {\n          let err = Error;\n          err.message = \"Invalid response code: \" + response.status;\n          this.setState({ error: err });\n        }\n        return response.json();\n      })\n      .then((json) => {\n        this.setState(\n          {\n            movies: json.movies,\n            isLoaded: true,\n            genreName: this.props.location.genreName,\n          },\n          (error) => {\n            this.setState({\n              isLoaded: true,\n              error,\n            });\n          }\n        );\n      });\n  }\n\n  render() {\n    let { movies, isLoaded, error, genreName } = this.state;\n\n    if (!movies) {\n      movies = [];\n    }\n\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <p>Loading...</p>;\n    } else {\n      return (\n        <Fragment>\n          <h2>Genre: {genreName}</h2>\n\n          <div className=\"list-group\">\n            {movies.map((m) => (\n              <Link\n                key={m.id}\n                to={`/movies/${m.id}`}\n                className=\"list-group-item list-group-item-action\"\n              >\n                {m.title}\n              </Link>\n            ))}\n          </div>\n        </Fragment>\n      );\n    }\n  }\n}\n","const Input = (props) => {\n  return (\n    <div className=\"mb-3\">\n      <label htmlFor={props.name} className=\"form-label\">\n        {props.title}\n      </label>\n      <input\n        type={props.type}\n        className={`form-control ${props.className}`}\n        id={props.name}\n        name={props.name}\n        value={props.value}\n        onChange={props.handleChange}\n        placeholder={props.placeholder}\n      />\n      <div className={props.errorDiv}>{props.errorMsg}</div>\n    </div>\n  );\n};\n\nexport default Input;","const Alert = (props) => {\n    return(\n        <div className={`alert ${props.alertType}`} role=\"alert\">\n        {props.alertMessage}\n        </div>\n    );\n}\n\nexport default Alert;","import React, { Component, Fragment } from \"react\";\nimport Input from \"./form-components/Input\";\nimport Alert from \"./ui-components/Alert\";\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      error: null,\n      errors: [],\n      alert: {\n        type: \"d-none\",\n        message: \"\",\n      },\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange = (evt) => {\n    let value = evt.target.value;\n    let name = evt.target.name;\n    this.setState((prevState) => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  handleSubmit = (evt) => {\n    evt.preventDefault();\n\n    let errors = [];\n\n    if (this.state.email === \"\") {\n        errors.push(\"email\");\n    }\n\n    if (this.state.password === \"\") {\n        errors.push(\"password\");\n    }\n\n    this.setState({errors: errors});\n\n    if (errors.length > 0) {\n        return false;\n    }\n\n    const data = new FormData(evt.target);\n    const payload = Object.fromEntries(data.entries());\n\n    const requestOptions = {\n        method: \"POST\",\n        body: JSON.stringify(payload),\n    }\n\n    fetch(`${process.env.REACT_APP_API_URL}/v1/signin`, requestOptions)\n        .then((response) => response.json())\n        .then((data) => {\n            if (data.error) {\n                this.setState({\n                    alert: {\n                        type: \"alert-danger\",\n                        message: data.error.message,\n                    }\n                })\n            } else {\n                console.log(data);\n                this.handleJWTChange(Object.values(data)[0]);\n                window.localStorage.setItem(\"jwt\", JSON.stringify(Object.values(data)[0]));\n                this.props.history.push({\n                    pathname: \"/admin\",\n                })\n            }\n        })\n\n  };\n\n  handleJWTChange(jwt) {\n      this.props.handleJWTChange(jwt);\n  }\n\n  hasError(key) {\n    return this.state.errors.indexOf(key) !== -1;\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <h2>Login</h2>\n        <hr />\n        <Alert\n          alertType={this.state.alert.type}\n          alertMessage={this.state.alert.message}\n        />\n\n        <form className=\"pt-3\" onSubmit={this.handleSubmit}>\n          <Input\n            title={\"Email\"}\n            type={\"email\"}\n            name={\"email\"}\n            handleChange={this.handleChange}\n            className={this.hasError(\"email\") ? \"is-invalid\" : \"\"}\n            errorDiv={this.hasError(\"email\") ? \"text-danger\" : \"d-none\"}\n            errorMsg={\"Please enter a valid email address\"}\n          />\n\n          <Input\n            title={\"Password\"}\n            type={\"password\"}\n            name={\"password\"}\n            handleChange={this.handleChange}\n            className={this.hasError(\"password\") ? \"is-invalid\" : \"\"}\n            errorDiv={this.hasError(\"password\") ? \"text-danger\" : \"d-none\"}\n            errorMsg={\"Please enter a password\"}\n          />\n\n          <hr />\n          <button className=\"btn btn-primary\">Login</button>\n        </form>\n      </Fragment>\n    );\n  }\n}\n","import React, { Component, Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Input from \"./form-components/Input\";\n\nexport default class GraphQL extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movies: [],\n      isLoaded: false,\n      error: null,\n      alert: {\n        type: \"d-none\",\n        message: \"\",\n      },\n      searchTerm: \"\",\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange = (evt) => {\n    let value = evt.target.value;\n\n    this.setState((prevState) => ({\n      searchTerm: value,\n    }));\n\n    if (value.length > 2) {\n      this.performSearch();\n    } else {\n      this.setState({ movies: [] });\n    }\n  };\n\n  performSearch() {\n    const payload = `\n        {\n            search(titleContains: \"${this.state.searchTerm}\") {\n                id\n                title\n                runtime\n                year\n                description\n            }\n        }\n        `;\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    const requestOptions = {\n      method: \"POST\",\n      body: payload,\n      headers: myHeaders,\n    };\n\n    fetch(`${process.env.REACT_APP_API_URL}/v1/graphql`, requestOptions)\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n        let theList = Object.values(data.data.search);\n        return theList;\n      })\n      .then((theList) => {\n        console.log(theList);\n        if (theList.length > 0) {\n          this.setState({\n            movies: theList,\n          });\n        } else {\n          this.setState({\n            movies: [],\n          });\n        }\n      });\n  }\n\n  componentDidMount() {\n    const payload = `\n        {\n            list {\n                id\n                title\n                runtime\n                year\n                description\n            }\n        }\n        `;\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    const requestOptions = {\n      method: \"POST\",\n      body: payload,\n      headers: myHeaders,\n    };\n\n    fetch(`${process.env.REACT_APP_API_URL}/v1/graphql`, requestOptions)\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n        let theList = Object.values(data.data.list);\n        return theList;\n      })\n      .then((theList) => {\n        console.log(theList);\n        this.setState({\n          movies: theList,\n        });\n      });\n  }\n\n  render() {\n    let { movies } = this.state;\n    return (\n      <Fragment>\n        <h2>GraphQL</h2>\n        <hr />\n\n        <Input\n          title={\"Search\"}\n          type={\"text\"}\n          name={\"search\"}\n          value={this.state.searchTerm}\n          handleChange={this.handleChange}\n        />\n\n        <div className=\"list-group\">\n          {movies.map((m) => (\n            <Link\n              key={m.id}\n              className=\"list-group-item list-group-item-action\"\n              to={`/moviesgraphql/${m.id}`}\n            >\n              <strong>{m.title}</strong>\n              <br />\n              <small className=\"text-muted\">\n                ({m.year}) - {m.runtime} minutes\n              </small>\n              <br />\n              {m.description.slice(0, 100)}...\n            </Link>\n          ))}\n        </div>\n      </Fragment>\n    );\n  }\n}\n","import React, { Component, Fragment } from \"react\";\n\nexport default class OneMovieGraphQL extends Component {\n  state = { movie: {}, isLoaded: false, error: null };\n\n  componentDidMount() {\n    const payload = `\n    {\n        movie(id: ${this.props.match.params.id}) {\n            id\n            title\n            runtime\n            year\n            description\n            release_date\n            rating\n            mpaa_rating\n            poster\n        }\n    }\n    `;\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    const requestOptions = {\n      method: \"POST\",\n      body: payload,\n      headers: myHeaders,\n    };\n\n    fetch(`${process.env.REACT_APP_API_URL}/v1/graphql`, requestOptions)\n      .then((response) => response.json())\n      .then((data) => {\n        this.setState({\n          movie: data.data.movie,\n          isLoaded: true,\n        });\n      });\n  }\n\n  render() {\n    const { movie, isLoaded, error } = this.state;\n    if (movie.genres) {\n      movie.genres = Object.values(movie.genres);\n    } else {\n      movie.genres = [];\n    }\n\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <p>Loading...</p>;\n    } else {\n      return (\n        <Fragment>\n          <h2>\n            Movie: {movie.title} ({movie.year}) \n          </h2>\n\n          {movie.poster !== \"\" && (\n              <div>\n                  <img src={`https://image.tmdb.org/t/p/w200${movie.poster}`} alt=\"poster\" />\n              </div>\n          )}\n\n          <div className=\"float-start\">\n            <small>Rating: {movie.mpaa_rating}</small>\n          </div>\n\n          \n          <div className=\"float-end\">\n            {movie.genres.map((m, index) => (\n              <span className=\"badge bg-secondary me-1\" key={index}>\n                {m}\n              </span>\n            ))}\n          </div>\n          <div className=\"clearfix\"></div>\n\n          <hr />\n\n          <table className=\"table table-compact table-striped\">\n            <thead></thead>\n            <tbody>\n              <tr>\n                <td>\n                  <strong>Title:</strong>\n                </td>\n                <td>{movie.title}</td>\n              </tr>\n              <tr>\n                <td>\n                  <strong>Description:</strong>\n                </td>\n                <td>{movie.description}</td>\n              </tr>\n              <tr>\n                <td>\n                  <strong>Run time:</strong>\n                </td>\n                <td>{movie.runtime} minutes</td>\n              </tr>\n            </tbody>\n          </table>\n        </Fragment>\n      );\n    }\n  }\n}\n","const Select = (props) => {\n  return (\n    <div className=\"mb-3\">\n      <label htmlFor={props.name} className=\"form-label\">\n        {\" \"}\n        {props.title}{\" \"}\n      </label>\n      <select\n        className=\"form-select\"\n        name={props.name}\n        value={props.value}\n        onChange={props.handleChange}\n      >\n          <option value=\"\">{props.placeholder}</option>\n          {props.options.map((option) => {\n              return (\n                  <option\n                    className=\"form-select\"\n                    key={option.id}\n                    value={option.id}\n                    label={option.value}\n                    >\n                        {option.value}\n                    </option>\n              )\n          })}\n      </select>\n    </div>\n  );\n};\n\nexport default Select;\n","const TextArea = (props) => {\n    return (\n      <div className=\"mb-3\">\n        <label htmlFor=\"description\" className=\"form-label\">\n          {props.title}\n        </label>\n        <textarea\n          className=\"form-control\"\n          id={props.name}\n          name={props.name}\n          value={props.value}\n          onChange={props.handleChange}\n          rows={props.rows}\n        />\n      </div>\n    );\n  };\n  \n  export default TextArea;\n  ","import React, { useEffect, useState, Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./EditMovie.css\";\nimport Input from \"./form-components/Input\";\nimport Select from \"./form-components/Select\";\nimport TextArea from \"./form-components/TextArea\";\nimport Alert from \"./ui-components/Alert\";\nimport { confirmAlert } from \"react-confirm-alert\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\n\nfunction EditMovieFunc(props) {\n    const [movie, setMovie] = useState({});\n    const [error, setError] = useState(null);\n    const [errors, setErrors] = useState([]);\n    const [alert, setAlert] = useState({type: \"d-none\", message: \"\"});\n    const mpaaOptions = [\n        { id: \"G\", value: \"G\" },\n        { id: \"PG\", value: \"PG\" },\n        { id: \"PG13\", value: \"PG13\" },\n        { id: \"R\", value: \"R\" },\n        { id: \"NC17\", value: \"NC17\" },\n    ];\n\n    useEffect(() => {\n        setMovie({\n            id: 0,\n            title: \"\",\n            release_date: \"\",\n            mpaa_rating: \"\",\n            rating: \"\",\n            description: \"\",\n        });\n        if (props.jwt === \"\") {\n            props.history.push({\n                pathname: \"/login\",\n            });\n            return;\n        }\n\n        const id = props.match.params.id;\n        if (id > 0) {\n            fetch(`${process.env.REACT_APP_API_URL}/v1/movie/` + id)\n              .then((response) => {\n                if (response.status !== 200) {\n                    setError(\"Invalid response: \", response.status);\n                } else {\n                    setError(null);\n                }\n                return response.json();\n              })\n              .then((json) => {\n                const releaseDate = new Date(json.movie.release_date);\n                json.movie.release_date = releaseDate.toISOString().split(\"T\")[0];\n                setMovie(json.movie);\n              });\n          }\n\n    }, [props.history, props.jwt, props.match.params.id])\n\n    const handleChange = () => (evt) => {\n        let value = evt.target.value;\n        let name = evt.target.name;\n        setMovie({\n            ...movie,\n            [name]: value,\n        });\n    }\n\n    const handleSubmit = (evt) => {\n        evt.preventDefault();\n        // do validation\n        let errors = [];\n        if (movie.title === \"\") {\n            errors.push(\"title\");\n        }\n\n        setErrors(errors)\n\n        if (errors.length > 0) {\n            return false;\n        }\n\n        // we passed, so post info\n        const data = new FormData(evt.target);\n        const payload = Object.fromEntries(data.entries());\n        const myHeaders = new Headers();\n        myHeaders.append(\"Content-Type\", \"application/json\");\n        myHeaders.append(\"Authorization\", \"Bearer \" + props.jwt);\n\n        const requestOptions = {\n        method: \"POST\",\n        body: JSON.stringify(payload),\n        headers: myHeaders,\n        };\n        fetch(`${process.env.REACT_APP_API_URL}/v1/admin/editmovie`, requestOptions)\n        .then((response) => response.json())\n        .then((data) => {\n            if (data.error) {\n                setAlert({\n                    alert: { type: \"alert-danger\", message: data.error.message},\n                })\n            } else {\n                props.history.push({\n                    pathname: \"/admin\",\n                });\n            }\n        });\n    }\n\n    const confirmDelete = (e) => {\n        confirmAlert({\n            title: \"Delete Movie?\",\n            message: \"Are you sure?\",\n            buttons: [\n              {\n                label: \"Yes\",\n                onClick: () => {\n                  // delete the movie\n                  const myHeaders = new Headers();\n                  myHeaders.append(\"Content-Type\", \"application/json\");\n                  myHeaders.append(\"Authorization\", \"Bearer \" + props.jwt);\n     \n                  fetch(\n                    `${process.env.REACT_APP_API_URL}/v1/admin/deletemovie/` +\n                      movie.id,\n                    {\n                      method: \"GET\",\n                      headers: myHeaders,\n                    }\n                  )\n                    .then((response) => response.json)\n                    .then((data) => {\n                      if (data.error) {\n                        setAlert({type: \"alert-danger\", message: data.error.message});\n                      } else {\n                        setAlert({type: \"alert-success\", message: \"Movie deleted!\"});\n                        props.history.push({\n                          pathname: \"/admin\",\n                        });\n                      }\n                    });\n                },\n              },\n              {\n                label: \"No\",\n                onClick: () => {},\n              },\n            ],\n          });\n    }\n\n    function hasError(key) {\n        return errors.indexOf(key) !== -1;\n    }\n\n    if (error !== null) {\n        return <div>Error: {error.message}</div>;\n    } else {\n        return (\n            <Fragment>\n              <h2>Add/Edit Movie</h2>\n              <Alert\n                alertType={alert.type}\n                alertMessage={alert.message}\n              />\n              <hr />\n              <form onSubmit={handleSubmit}>\n                <input\n                  type=\"hidden\"\n                  name=\"id\"\n                  id=\"id\"\n                  value={movie.id}\n                  onChange={movie.id}\n                />\n   \n                <Input\n                  title={\"Title\"}\n                  className={hasError(\"title\") ? \"is-invalid\" : \"\"}\n                  type={\"text\"}\n                  name={\"title\"}\n                  value={movie.title}\n                  handleChange={handleChange(\"title\")}\n                  errorDiv={hasError(\"title\") ? \"text-danger\" : \"d-none\"}\n                  errorMsg={\"Please enter a title\"}\n                />\n   \n                <Input\n                  title={\"Release Date\"}\n                  type={\"date\"}\n                  name={\"release_date\"}\n                  value={movie.release_date}\n                  handleChange={handleChange(\"release_date\")}\n                />\n   \n                <Input\n                  title={\"Runtime\"}\n                  type={\"text\"}\n                  name={\"runtime\"}\n                  value={movie.runtime}\n                  handleChange={handleChange(\"runtime\")}\n                />\n   \n                <Select\n                  title={\"MPAA Rating\"}\n                  name={\"mpaa_rating\"}\n                  options={mpaaOptions}\n                  value={movie.mpaa_rating}\n                  handleChange={handleChange(\"mpaa_rating\")}\n                  placeholder=\"Choose...\"\n                />\n   \n                <Input\n                  title={\"Rating\"}\n                  type={\"text\"}\n                  name={\"rating\"}\n                  value={movie.rating}\n                  handleChange={handleChange(\"rating\")}\n                />\n   \n                <TextArea\n                  title={\"Description\"}\n                  name={\"description\"}\n                  value={movie.description}\n                  rows={\"3\"}\n                  handleChange={handleChange(\"description\")}\n                />\n   \n                <hr />\n   \n                <button className=\"btn btn-primary\">Save</button>\n                <Link to=\"/admin\" className=\"btn btn-warning ms-1\">\n                  Cancel\n                </Link>\n                {movie.id > 0 && (\n                  <a\n                    href=\"#!\"\n                    onClick={() => confirmDelete()}\n                    className=\"btn btn-danger ms-1\"\n                  >\n                    Delete\n                  </a>\n                )}\n              </form>\n            </Fragment>\n          );\n    }\n}\n\nexport default EditMovieFunc;","import React, { Component, Fragment } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Movies from \"./components/Movies\";\nimport Admin from \"./components/Admin\";\nimport Home from \"./components/Home\";\nimport OneMovie from \"./components/OneMovie\";\nimport Genres from \"./components/Genres\";\nimport OneGenre from \"./components/OneGenre\";\nimport Login from \"./components/Login\";\nimport GraphQL from \"./components/GraphQL\";\nimport OneMovieGraphQL from \"./components/OneMovieGraphQL\";\nimport EditMovieFunc from \"./components/EditMovieFunc\";\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      jwt: \"\",\n    };\n    this.handleJWTChange(this.handleJWTChange.bind(this));\n  }\n\n  componentDidMount() {\n    let t = window.localStorage.getItem(\"jwt\");\n    if (t) {\n      if (this.state.jwt === \"\") {\n        this.setState({jwt: JSON.parse(t)});\n      }\n    }\n  }\n\n  handleJWTChange = (jwt) => {\n    this.setState({ jwt: jwt });\n  };\n\n  logout = () => {\n    this.setState({ jwt: \"\" });\n    window.localStorage.removeItem(\"jwt\");\n  };\n\n  render() {\n    let loginLink;\n    if (this.state.jwt === \"\") {\n      loginLink = <Link to=\"/login\">Login</Link>;\n    } else {\n      loginLink = (\n        <Link to=\"/logout\" onClick={this.logout}>\n          Logout\n        </Link>\n      );\n    }\n\n    return (\n      <Router>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col mt-3\">\n              <h1 className=\"mt-3\">Go Watch a Movie!</h1>\n            </div>\n            <div className=\"col mt-3 text-end\">{loginLink}</div>\n            <hr className=\"mb-3\"></hr>\n          </div>\n\n          <div className=\"row\">\n            <div className=\"col-md-2\">\n              <nav>\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">\n                    <Link to=\"/\">Home</Link>\n                  </li>\n                  <li className=\"list-group-item\">\n                    <Link to=\"/movies\">Movies</Link>\n                  </li>\n                  <li className=\"list-group-item\">\n                    <Link to=\"/genres\">Genres</Link>\n                  </li>\n                  {this.state.jwt !== \"\" && (\n                    <Fragment>\n                      <li className=\"list-group-item\">\n                        <Link to=\"/admin/movie/0\">Add movie</Link>\n                      </li>\n                      <li className=\"list-group-item\">\n                        <Link to=\"/admin\">Manage Catalogue</Link>\n                      </li>\n                    </Fragment>\n                  )}\n                  <li className=\"list-group-item\">\n                    <Link to=\"/graphql\">GraphQL</Link>\n                  </li>\n                </ul>\n              </nav>\n            </div>\n\n            <div className=\"col-md-10\">\n              <Switch>\n                <Route path=\"/movies/:id\" component={OneMovie} />\n                <Route path=\"/moviesgraphql/:id\" component={OneMovieGraphQL} />\n\n                <Route path=\"/movies\">\n                  <Movies />\n                </Route>\n\n                <Route path=\"/genre/:id\" component={OneGenre} />\n\n                <Route\n                  exact\n                  path=\"/login\"\n                  component={(props) => (\n                    <Login {...props} handleJWTChange={this.handleJWTChange} />\n                  )}\n                />\n\n                <Route exact path=\"/genres\">\n                  <Genres />\n                </Route>\n\n                <Route exact path=\"/graphql\">\n                  <GraphQL />\n                </Route>\n\n                <Route\n                  path=\"/admin/movie/:id\"\n                  component={(props) => (\n                    <EditMovieFunc {...props} jwt={this.state.jwt} />\n                  )}\n                />\n\n                <Route\n                  path=\"/admin\"\n                  component={(props) => (\n                    <Admin {...props} jwt={this.state.jwt} />\n                  )}\n                />\n\n                <Route path=\"/\">\n                  <Home />\n                </Route>\n              </Switch>\n            </div>\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}