{"ast":null,"code":"var _jsxFileName = \"/home/aljani/projects/react_go/front-end_last/front-end/src/components/LoginFunc.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, Fragment } from 'react';\nimport Input from './form-components/Input';\nimport Alert from './ui-components/Alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LoginFunc(props) {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n  const [alert, setAlert] = useState({\n    type: \"d-none\",\n    message: \"\"\n  });\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    if (props.jwt === \"\") {\n      props.history.push({\n        pathname: \"/login\"\n      });\n      return;\n    }\n\n    if (email === \"\") {\n      errors.push(\"email\");\n    }\n\n    if (password === \"\") {\n      errors.push(\"password\");\n    }\n\n    setErrors(errors);\n\n    if (errors.length > 0) {\n      return false;\n    }\n\n    const data = new FormData(evt.target);\n    const payload = Object.fromEntries(data.entries());\n    const requestOptions = {\n      method: \"POST\",\n      body: JSON.stringify(payload)\n    };\n    fetch(\"http://localhost:4000/v1/signin\", requestOptions).then(response => {\n      if (response.status !== 200) {}\n\n      return response.json();\n    }).then(data => {\n      if (data.error) {\n        console.log(\"login failed\");\n        console.log(\"error\", data.error);\n        setAlert({\n          type: \"alert-danger\",\n          message: \"Invalid login\"\n        });\n      } else {\n        console.log(\"Logging in\");\n        handleJWTChange(Object.values(data)[0]);\n        window.localStorage.setItem(\"jwt\", JSON.stringify(Object.values(data)[0]));\n        props.history.push({\n          pathname: \"/admin\"\n        });\n      }\n    });\n  };\n\n  function handleJWTChange(jwt) {\n    props.handleJWTChange(jwt);\n  }\n\n  function hasError(key) {\n    return errors.indexOf(key) !== -1;\n  }\n\n  function handlePassword(evt) {\n    setPassword(evt.target.value);\n  }\n\n  function handleEmail(evt) {\n    setEmail(evt.target.value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      alertType: alert.type,\n      alertMessage: alert.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"pt-3\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        title: \"Email\",\n        type: \"email\",\n        name: \"email\",\n        value: email,\n        handleChange: handleEmail,\n        className: hasError(\"email\") ? \"is-invalid\" : \"\",\n        errorDiv: hasError(\"email\") ? \"text-danger\" : \"d-none\",\n        errorMsg: \"Please enter a valid email address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        title: \"Password\",\n        type: \"password\",\n        name: \"password\",\n        handleChange: handlePassword,\n        className: hasError(\"password\") ? \"is-invalid\" : \"\",\n        errorDiv: hasError(\"password\") ? \"text-danger\" : \"d-none\",\n        errorMsg: \"Please enter a password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LoginFunc, \"wfH38f0yqFsHW3mnsCACpX+NXPk=\");\n\n_c = LoginFunc;\nexport default LoginFunc;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginFunc\");","map":{"version":3,"sources":["/home/aljani/projects/react_go/front-end_last/front-end/src/components/LoginFunc.js"],"names":["React","useState","Fragment","Input","Alert","LoginFunc","props","email","setEmail","password","setPassword","errors","setErrors","alert","setAlert","type","message","handleSubmit","evt","preventDefault","jwt","history","push","pathname","length","data","FormData","target","payload","Object","fromEntries","entries","requestOptions","method","body","JSON","stringify","fetch","then","response","status","json","error","console","log","handleJWTChange","values","window","localStorage","setItem","hasError","key","indexOf","handlePassword","value","handleEmail"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,QAAzB,QAAwC,OAAxC;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AACtB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACU,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC;AAACc,IAAAA,IAAI,EAAE,QAAP;AAAiBC,IAAAA,OAAO,EAAE;AAA1B,GAAD,CAAlC;;AAEA,QAAMC,YAAY,GAAIC,GAAD,IAAS;AAC1BA,IAAAA,GAAG,CAACC,cAAJ;;AACA,QAAIb,KAAK,CAACc,GAAN,KAAc,EAAlB,EAAsB;AAClBd,MAAAA,KAAK,CAACe,OAAN,CAAcC,IAAd,CAAmB;AACfC,QAAAA,QAAQ,EAAE;AADK,OAAnB;AAGA;AACH;;AAED,QAAIhB,KAAK,KAAK,EAAd,EAAkB;AACdI,MAAAA,MAAM,CAACW,IAAP,CAAY,OAAZ;AACH;;AAED,QAAIb,QAAQ,KAAK,EAAjB,EAAqB;AACjBE,MAAAA,MAAM,CAACW,IAAP,CAAY,UAAZ;AACH;;AAEDV,IAAAA,SAAS,CAACD,MAAD,CAAT;;AAEA,QAAIA,MAAM,CAACa,MAAP,GAAgB,CAApB,EAAuB;AACnB,aAAO,KAAP;AACH;;AAED,UAAMC,IAAI,GAAG,IAAIC,QAAJ,CAAaR,GAAG,CAACS,MAAjB,CAAb;AACA,UAAMC,OAAO,GAAGC,MAAM,CAACC,WAAP,CAAmBL,IAAI,CAACM,OAAL,EAAnB,CAAhB;AAEA,UAAMC,cAAc,GAAG;AACnBC,MAAAA,MAAM,EAAE,MADW;AAEnBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,OAAf;AAFa,KAAvB;AAKAS,IAAAA,KAAK,CAAC,iCAAD,EAAoCL,cAApC,CAAL,CACKM,IADL,CACWC,QAAD,IAAc;AAChB,UAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B,CAAE;;AAC/B,aAAOD,QAAQ,CAACE,IAAT,EAAP;AACH,KAJL,EAKKH,IALL,CAKWb,IAAD,IAAU;AACZ,UAAIA,IAAI,CAACiB,KAAT,EAAgB;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBnB,IAAI,CAACiB,KAA1B;AACA5B,QAAAA,QAAQ,CAAC;AAACC,UAAAA,IAAI,EAAE,cAAP;AAAuBC,UAAAA,OAAO,EAAE;AAAhC,SAAD,CAAR;AACH,OAJD,MAIO;AACH2B,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAC,QAAAA,eAAe,CAAChB,MAAM,CAACiB,MAAP,CAAcrB,IAAd,EAAoB,CAApB,CAAD,CAAf;AACAsB,QAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,KAA5B,EAAmCd,IAAI,CAACC,SAAL,CAAeP,MAAM,CAACiB,MAAP,CAAcrB,IAAd,EAAoB,CAApB,CAAf,CAAnC;AACAnB,QAAAA,KAAK,CAACe,OAAN,CAAcC,IAAd,CAAmB;AACfC,UAAAA,QAAQ,EAAE;AADK,SAAnB;AAGH;AACJ,KAlBL;AAmBH,GAlDD;;AAoDA,WAASsB,eAAT,CAAyBzB,GAAzB,EAA8B;AAC1Bd,IAAAA,KAAK,CAACuC,eAAN,CAAsBzB,GAAtB;AACH;;AAED,WAAS8B,QAAT,CAAkBC,GAAlB,EAAuB;AACnB,WAAOxC,MAAM,CAACyC,OAAP,CAAeD,GAAf,MAAwB,CAAC,CAAhC;AACH;;AAED,WAASE,cAAT,CAAwBnC,GAAxB,EAA6B;AACzBR,IAAAA,WAAW,CAACQ,GAAG,CAACS,MAAJ,CAAW2B,KAAZ,CAAX;AACH;;AAED,WAASC,WAAT,CAAqBrC,GAArB,EAA0B;AACtBV,IAAAA,QAAQ,CAACU,GAAG,CAACS,MAAJ,CAAW2B,KAAZ,CAAR;AACH;;AAGD,sBACI,QAAC,QAAD;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,KAAD;AACA,MAAA,SAAS,EAAEzC,KAAK,CAACE,IADjB;AAEA,MAAA,YAAY,EAAEF,KAAK,CAACG;AAFpB;AAAA;AAAA;AAAA;AAAA,YAHJ,eAQI;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAuB,MAAA,QAAQ,EAAEC,YAAjC;AAAA,8BACA,QAAC,KAAD;AACI,QAAA,KAAK,EAAE,OADX;AAEI,QAAA,IAAI,EAAE,OAFV;AAGI,QAAA,IAAI,EAAE,OAHV;AAII,QAAA,KAAK,EAAEV,KAJX;AAKI,QAAA,YAAY,EAAEgD,WALlB;AAMI,QAAA,SAAS,EAAEL,QAAQ,CAAC,OAAD,CAAR,GAAoB,YAApB,GAAmC,EANlD;AAOI,QAAA,QAAQ,EAAEA,QAAQ,CAAC,OAAD,CAAR,GAAoB,aAApB,GAAoC,QAPlD;AAQI,QAAA,QAAQ,EAAE;AARd;AAAA;AAAA;AAAA;AAAA,cADA,eAYA,QAAC,KAAD;AACI,QAAA,KAAK,EAAE,UADX;AAEI,QAAA,IAAI,EAAE,UAFV;AAGI,QAAA,IAAI,EAAE,UAHV;AAII,QAAA,YAAY,EAAEG,cAJlB;AAKI,QAAA,SAAS,EAAEH,QAAQ,CAAC,UAAD,CAAR,GAAuB,YAAvB,GAAsC,EALrD;AAMI,QAAA,QAAQ,EAAEA,QAAQ,CAAC,UAAD,CAAR,GAAuB,aAAvB,GAAuC,QANrD;AAOI,QAAA,QAAQ,EAAE;AAPd;AAAA;AAAA;AAAA;AAAA,cAZA,eAsBA;AAAA;AAAA;AAAA;AAAA,cAtBA,eAuBA;AAAQ,QAAA,SAAS,EAAC,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAvBA;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqCH;;GAhHQ7C,S;;KAAAA,S;AAkHT,eAAeA,SAAf","sourcesContent":["import React, {useState, Fragment} from 'react'\nimport Input from './form-components/Input'\nimport Alert from './ui-components/Alert'\n\nfunction LoginFunc(props) {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [errors, setErrors] = useState([]);\n    const [alert, setAlert] = useState({type: \"d-none\", message: \"\"});\n\n    const handleSubmit = (evt) => {\n        evt.preventDefault();\n        if (props.jwt === \"\") {\n            props.history.push({\n                pathname: \"/login\",\n            });\n            return;\n        }\n\n        if (email === \"\") {\n            errors.push(\"email\");\n        }\n    \n        if (password === \"\") {\n            errors.push(\"password\");\n        }\n    \n        setErrors(errors);\n    \n        if (errors.length > 0) {\n            return false;\n        }\n    \n        const data = new FormData(evt.target);\n        const payload = Object.fromEntries(data.entries());\n    \n        const requestOptions = {\n            method: \"POST\",\n            body: JSON.stringify(payload),\n        }\n    \n        fetch(\"http://localhost:4000/v1/signin\", requestOptions)\n            .then((response) => {\n                if (response.status !== 200) {}\n                return response.json();\n            })\n            .then((data) => {\n                if (data.error) {\n                    console.log(\"login failed\");\n                    console.log(\"error\", data.error);\n                    setAlert({type: \"alert-danger\", message: \"Invalid login\" });\n                } else {\n                    console.log(\"Logging in\");\n                    handleJWTChange(Object.values(data)[0]);\n                    window.localStorage.setItem(\"jwt\", JSON.stringify(Object.values(data)[0]));\n                    props.history.push({\n                        pathname: \"/admin\",\n                    })\n                }\n            })\n    }\n\n    function handleJWTChange(jwt) {\n        props.handleJWTChange(jwt);\n    }\n\n    function hasError(key) {\n        return errors.indexOf(key) !== -1;\n    }\n\n    function handlePassword(evt) {\n        setPassword(evt.target.value);\n    }\n\n    function handleEmail(evt) {\n        setEmail(evt.target.value);\n    }\n\n    \n    return (\n        <Fragment>\n            <h2>Login</h2>\n            <hr />\n            <Alert\n            alertType={alert.type}\n            alertMessage={alert.message}\n            />\n    \n            <form className=\"pt-3\" onSubmit={handleSubmit}>\n            <Input\n                title={\"Email\"}\n                type={\"email\"}\n                name={\"email\"}\n                value={email}\n                handleChange={handleEmail}\n                className={hasError(\"email\") ? \"is-invalid\" : \"\"}\n                errorDiv={hasError(\"email\") ? \"text-danger\" : \"d-none\"}\n                errorMsg={\"Please enter a valid email address\"}\n            />\n    \n            <Input\n                title={\"Password\"}\n                type={\"password\"}\n                name={\"password\"}\n                handleChange={handlePassword}\n                className={hasError(\"password\") ? \"is-invalid\" : \"\"}\n                errorDiv={hasError(\"password\") ? \"text-danger\" : \"d-none\"}\n                errorMsg={\"Please enter a password\"}\n            />\n    \n            <hr />\n            <button className=\"btn btn-primary\">Login</button>\n            </form>\n        </Fragment>\n        );\n      \n}\n\nexport default LoginFunc;"]},"metadata":{},"sourceType":"module"}