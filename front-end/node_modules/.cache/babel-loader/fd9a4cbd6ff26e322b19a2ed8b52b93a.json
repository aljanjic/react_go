{"ast":null,"code":"var _jsxFileName = \"/home/aljani/projects/react_go/front-end_last/front-end/src/components/MoviesFunc.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, Fragment } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MoviesFunc(props) {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    fetch(\"http://localhost:4000/v1/movies\").then(response => {\n      if (response.status !== 200) {\n        // let err = Error;\n        // err.message = \"Invalid response code: \" + response.status;\n        // this.setState({ error: err });\n        setError(\"Invalid response code: \", response.status);\n      } else {\n        setError(null);\n      }\n\n      return response.json();\n    }).then(json => {\n      //   this.setState(\n      //     {\n      //       movies: json.movies,\n      //       isLoaded: true,\n      //     },\n      //     (error) => {\n      //       this.setState({\n      //         isLoaded: true,\n      //         error,\n      //       });\n      //     }\n      //   );\n      setMovies(json.movies);\n    });\n  }, []); // *** must set default value, or endless loop\n\n  if (error !== null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 16\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Choose a movie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-group\",\n        children: movies.map(m => /*#__PURE__*/_jsxDEV(Link, {\n          className: \"list-group-item list-group-item-action\",\n          to: `/movies/${m.id}`,\n          children: m.title\n        }, m.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(MoviesFunc, \"UQIz3DUAsscPOxpy0EBLqNrQOgQ=\");\n\n_c = MoviesFunc;\nexport default MoviesFunc;\n\nvar _c;\n\n$RefreshReg$(_c, \"MoviesFunc\");","map":{"version":3,"sources":["/home/aljani/projects/react_go/front-end_last/front-end/src/components/MoviesFunc.js"],"names":["React","useEffect","useState","Fragment","Link","MoviesFunc","props","movies","setMovies","error","setError","fetch","then","response","status","json","message","map","m","id","title"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,EAAoCC,QAApC,QAAoD,OAApD;AACA,SAASC,IAAT,QAAqB,kBAArB;;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACvB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,KAAK,CAAC,iCAAD,CAAL,CACCC,IADD,CACOC,QAAD,IAAc;AAClB,UAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B;AACA;AACA;AACAJ,QAAAA,QAAQ,CAAC,yBAAD,EAA4BG,QAAQ,CAACC,MAArC,CAAR;AACD,OALD,MAKO;AACHJ,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACH;;AACD,aAAOG,QAAQ,CAACE,IAAT,EAAP;AACD,KAXD,EAYCH,IAZD,CAYOG,IAAD,IAAU;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAP,MAAAA,SAAS,CAACO,IAAI,CAACR,MAAN,CAAT;AACC,KA1BD;AA2BH,GA5BQ,EA4BN,EA5BM,CAAT,CAJuB,CAgCf;;AAER,MAAIE,KAAK,KAAK,IAAd,EAAoB;AAChB,wBAAO;AAAA,4BAAaA,KAAK,CAACO,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFD,MAEO;AACH,wBACI,QAAC,QAAD;AAAA,8BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAA;AAAA;AAAA;AAAA,cAFA,eAGA;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,kBACKT,MAAM,CAACU,GAAP,CAAYC,CAAD,iBACZ,QAAC,IAAD;AAEI,UAAA,SAAS,EAAC,wCAFd;AAGI,UAAA,EAAE,EAAG,WAAUA,CAAC,CAACC,EAAG,EAHxB;AAAA,oBAKKD,CAAC,CAACE;AALP,WACSF,CAAC,CAACC,EADX;AAAA;AAAA;AAAA;AAAA,gBADC;AADL;AAAA;AAAA;AAAA;AAAA,cAHA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAiBH;AACJ;;GAvDQd,U;;KAAAA,U;AAyDT,eAAeA,UAAf","sourcesContent":["import React, {useEffect, useState, Fragment } from 'react'\nimport { Link } from \"react-router-dom\"\n\nfunction MoviesFunc(props) {\n    const [movies, setMovies] = useState([]);\n    const [error, setError] = useState(\"\");\n\n    useEffect(() => {\n        fetch(\"http://localhost:4000/v1/movies\")\n        .then((response) => {\n          if (response.status !== 200) {\n            // let err = Error;\n            // err.message = \"Invalid response code: \" + response.status;\n            // this.setState({ error: err });\n            setError(\"Invalid response code: \", response.status);\n          } else {\n              setError(null);\n          }\n          return response.json();\n        })\n        .then((json) => {\n        //   this.setState(\n        //     {\n        //       movies: json.movies,\n        //       isLoaded: true,\n        //     },\n        //     (error) => {\n        //       this.setState({\n        //         isLoaded: true,\n        //         error,\n        //       });\n        //     }\n        //   );\n        setMovies(json.movies);\n        });\n    }, []); // *** must set default value, or endless loop\n\n    if (error !== null) {\n        return <div>Error: {error.message}</div>;\n    } else {\n        return (\n            <Fragment>\n            <h2>Choose a movie</h2>\n            <hr />\n            <div className=\"list-group\">\n                {movies.map((m) => (\n                <Link\n                    key={m.id}\n                    className=\"list-group-item list-group-item-action\"\n                    to={`/movies/${m.id}`}\n                >\n                    {m.title}\n                </Link>\n                ))}\n            </div>\n            </Fragment>\n        );\n    }\n}\n\nexport default MoviesFunc;"]},"metadata":{},"sourceType":"module"}