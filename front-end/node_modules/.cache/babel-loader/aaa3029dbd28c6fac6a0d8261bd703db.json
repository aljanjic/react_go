{"ast":null,"code":"var _jsxFileName = \"/home/aljani/projects/react_go/front-end/src/components/EditMovieFunc.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./EditMovie.css\";\nimport Input from \"./form-components/Input\";\nimport Select from \"./form-components/Select\";\nimport TextArea from \"./form-components/TextArea\";\nimport Alert from \"./ui-components/Alert\";\nimport { confirmAlert } from \"react-confirm-alert\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditMovieFunc(props) {\n  _s();\n\n  const [movie, setMovie] = useState({});\n  const [error, setError] = useState(null);\n  const [errors, setErrors] = useState([]);\n  const [alert, setAlert] = useState({\n    type: \"d-none\",\n    message: \"\"\n  });\n  const mpaaOptions = [{\n    id: \"G\",\n    value: \"G\"\n  }, {\n    id: \"PG\",\n    value: \"PG\"\n  }, {\n    id: \"PG13\",\n    value: \"PG13\"\n  }, {\n    id: \"R\",\n    value: \"R\"\n  }, {\n    id: \"NC17\",\n    value: \"NC17\"\n  }];\n  useEffect(() => {\n    if (props.jwt === \"\") {\n      props.history.push({\n        pathname: \"/login\"\n      });\n      return;\n    }\n\n    setMovie({\n      id: 0,\n      title: \"\",\n      release_date: \"\",\n      mpaa_rating: \"\",\n      rating: \"\",\n      description: \"\"\n    });\n    const id = props.match.params.id;\n\n    if (id > 0) {\n      fetch(\"http://localhost:4000/v1/movie/\" + id).then(response => {\n        if (response.status !== 200) {\n          setError(\"Invalid response: \", response.status);\n        } else {\n          setError(null);\n        }\n\n        return response.json();\n      }).then(json => {\n        const releaseDate = new Date(json.movie.release_date);\n        json.movie.release_date = releaseDate.toISOString().split(\"T\")[0];\n        setMovie(json.movie);\n      });\n    }\n  }, [props.history, props.jwt, props.match.params.id]);\n\n  const handleChange = () => evt => {\n    let value = evt.target.value;\n    let name = evt.target.name;\n    setMovie({ ...movie,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault(); // do validation\n\n    let errors = [];\n\n    if (movie.title === \"\") {\n      errors.push(\"title\");\n    }\n\n    setErrors(errors);\n\n    if (errors.length > 0) {\n      return false;\n    } // we passed, so post info\n\n\n    const data = new FormData(evt.target);\n    const payload = Object.fromEntries(data.entries());\n    const myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    myHeaders.append(\"Authorization\", \"Bearer \" + props.jwt);\n    const requestOptions = {\n      method: \"POST\",\n      body: JSON.stringify(payload),\n      headers: myHeaders\n    };\n    fetch(\"http://localhost:4000/v1/admin/editmovie\", requestOptions).then(response => response.json()).then(data => {\n      if (data.error) {\n        setAlert({\n          alert: {\n            type: \"alert-danger\",\n            message: data.error.message\n          }\n        });\n      } else {\n        props.history.push({\n          pathname: \"/admin\"\n        });\n      }\n    });\n  };\n\n  const confirmDelete = e => {\n    confirmAlert({\n      title: \"Delete Movie?\",\n      message: \"Are you sure?\",\n      buttons: [{\n        label: \"Yes\",\n        onClick: () => {\n          // delete the movie\n          const myHeaders = new Headers();\n          myHeaders.append(\"Content-Type\", \"application/json\");\n          myHeaders.append(\"Authorization\", \"Bearer \" + props.jwt);\n          fetch(\"http://localhost:4000/v1/admin/deletemovie/\" + movie.id, {\n            method: \"GET\",\n            headers: myHeaders\n          }).then(response => response.json).then(data => {\n            if (data.error) {\n              setAlert({\n                type: \"alert-danger\",\n                message: data.error.message\n              });\n            } else {\n              setAlert({\n                type: \"alert-success\",\n                message: \"Movie deleted!\"\n              });\n              props.history.push({\n                pathname: \"/admin\"\n              });\n            }\n          });\n        }\n      }, {\n        label: \"No\",\n        onClick: () => {}\n      }]\n    });\n  };\n\n  function hasError(key) {\n    return errors.indexOf(key) !== -1;\n  }\n\n  if (error !== null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 16\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add/Edit Movie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        alertType: alert.type,\n        alertMessage: alert.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"hidden\",\n          name: \"id\",\n          id: \"id\",\n          value: movie.id,\n          onChange: movie.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          title: \"Title\",\n          className: hasError(\"title\") ? \"is-invalid\" : \"\",\n          type: \"text\",\n          name: \"title\",\n          value: movie.title,\n          handleChange: handleChange(\"title\"),\n          errorDiv: hasError(\"title\") ? \"text-danger\" : \"d-none\",\n          errorMsg: \"Please enter a title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          title: \"Release Date\",\n          type: \"date\",\n          name: \"release_date\",\n          value: movie.release_date,\n          handleChange: handleChange(\"release_date\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          title: \"Runtime\",\n          type: \"text\",\n          name: \"runtime\",\n          value: movie.runtime,\n          handleChange: handleChange(\"runtime\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          title: \"MPAA Rating\",\n          name: \"mpaa_rating\",\n          options: mpaaOptions,\n          value: movie.mpaa_rating,\n          handleChange: handleChange(\"mpaa_rating\"),\n          placeholder: \"Choose...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          title: \"Rating\",\n          type: \"text\",\n          name: \"rating\",\n          value: movie.rating,\n          handleChange: handleChange(\"rating\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TextArea, {\n          title: \"Description\",\n          name: \"description\",\n          value: movie.description,\n          rows: \"3\",\n          handleChange: handleChange(\"description\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/admin\",\n          className: \"btn btn-warning ms-1\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 17\n        }, this), movie.id > 0 && /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#!\",\n          onClick: () => confirmDelete(),\n          className: \"btn btn-danger ms-1\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(EditMovieFunc, \"vRmOTJCq/jhDil2dXEoLjyUxwac=\");\n\n_c = EditMovieFunc;\nexport default EditMovieFunc;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditMovieFunc\");","map":{"version":3,"sources":["/home/aljani/projects/react_go/front-end/src/components/EditMovieFunc.js"],"names":["React","useEffect","useState","Fragment","Link","Input","Select","TextArea","Alert","confirmAlert","EditMovieFunc","props","movie","setMovie","error","setError","errors","setErrors","alert","setAlert","type","message","mpaaOptions","id","value","jwt","history","push","pathname","title","release_date","mpaa_rating","rating","description","match","params","fetch","then","response","status","json","releaseDate","Date","toISOString","split","handleChange","evt","target","name","handleSubmit","preventDefault","length","data","FormData","payload","Object","fromEntries","entries","myHeaders","Headers","append","requestOptions","method","body","JSON","stringify","headers","confirmDelete","e","buttons","label","onClick","hasError","key","indexOf","runtime"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,QAArC,QAAqD,OAArD;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAO,iBAAP;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,SAASC,YAAT,QAA6B,qBAA7B;AACA,OAAO,iDAAP;;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AAC1B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACc,MAAD,EAASC,SAAT,IAAsBf,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACgB,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAAC;AAACkB,IAAAA,IAAI,EAAE,QAAP;AAAiBC,IAAAA,OAAO,EAAE;AAA1B,GAAD,CAAlC;AACA,QAAMC,WAAW,GAAG,CAChB;AAAEC,IAAAA,EAAE,EAAE,GAAN;AAAWC,IAAAA,KAAK,EAAE;AAAlB,GADgB,EAEhB;AAAED,IAAAA,EAAE,EAAE,IAAN;AAAYC,IAAAA,KAAK,EAAE;AAAnB,GAFgB,EAGhB;AAAED,IAAAA,EAAE,EAAE,MAAN;AAAcC,IAAAA,KAAK,EAAE;AAArB,GAHgB,EAIhB;AAAED,IAAAA,EAAE,EAAE,GAAN;AAAWC,IAAAA,KAAK,EAAE;AAAlB,GAJgB,EAKhB;AAAED,IAAAA,EAAE,EAAE,MAAN;AAAcC,IAAAA,KAAK,EAAE;AAArB,GALgB,CAApB;AAQAvB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIU,KAAK,CAACc,GAAN,KAAc,EAAlB,EAAsB;AAClBd,MAAAA,KAAK,CAACe,OAAN,CAAcC,IAAd,CAAmB;AACfC,QAAAA,QAAQ,EAAE;AADK,OAAnB;AAGA;AACH;;AAEDf,IAAAA,QAAQ,CAAC;AACLU,MAAAA,EAAE,EAAE,CADC;AAELM,MAAAA,KAAK,EAAE,EAFF;AAGLC,MAAAA,YAAY,EAAE,EAHT;AAILC,MAAAA,WAAW,EAAE,EAJR;AAKLC,MAAAA,MAAM,EAAE,EALH;AAMLC,MAAAA,WAAW,EAAE;AANR,KAAD,CAAR;AASA,UAAMV,EAAE,GAAGZ,KAAK,CAACuB,KAAN,CAAYC,MAAZ,CAAmBZ,EAA9B;;AACA,QAAIA,EAAE,GAAG,CAAT,EAAY;AACRa,MAAAA,KAAK,CAAC,oCAAoCb,EAArC,CAAL,CACGc,IADH,CACSC,QAAD,IAAc;AAClB,YAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AACzBxB,UAAAA,QAAQ,CAAC,oBAAD,EAAuBuB,QAAQ,CAACC,MAAhC,CAAR;AACH,SAFD,MAEO;AACHxB,UAAAA,QAAQ,CAAC,IAAD,CAAR;AACH;;AACD,eAAOuB,QAAQ,CAACE,IAAT,EAAP;AACD,OARH,EASGH,IATH,CASSG,IAAD,IAAU;AACd,cAAMC,WAAW,GAAG,IAAIC,IAAJ,CAASF,IAAI,CAAC5B,KAAL,CAAWkB,YAApB,CAApB;AACAU,QAAAA,IAAI,CAAC5B,KAAL,CAAWkB,YAAX,GAA0BW,WAAW,CAACE,WAAZ,GAA0BC,KAA1B,CAAgC,GAAhC,EAAqC,CAArC,CAA1B;AACA/B,QAAAA,QAAQ,CAAC2B,IAAI,CAAC5B,KAAN,CAAR;AACD,OAbH;AAcD;AACN,GAlCQ,EAkCN,CAACD,KAAK,CAACe,OAAP,EAAgBf,KAAK,CAACc,GAAtB,EAA2Bd,KAAK,CAACuB,KAAN,CAAYC,MAAZ,CAAmBZ,EAA9C,CAlCM,CAAT;;AAoCA,QAAMsB,YAAY,GAAG,MAAOC,GAAD,IAAS;AAChC,QAAItB,KAAK,GAAGsB,GAAG,CAACC,MAAJ,CAAWvB,KAAvB;AACA,QAAIwB,IAAI,GAAGF,GAAG,CAACC,MAAJ,CAAWC,IAAtB;AACAnC,IAAAA,QAAQ,CAAC,EACL,GAAGD,KADE;AAEL,OAACoC,IAAD,GAAQxB;AAFH,KAAD,CAAR;AAIH,GAPD;;AASA,QAAMyB,YAAY,GAAIH,GAAD,IAAS;AAC1BA,IAAAA,GAAG,CAACI,cAAJ,GAD0B,CAE1B;;AACA,QAAIlC,MAAM,GAAG,EAAb;;AACA,QAAIJ,KAAK,CAACiB,KAAN,KAAgB,EAApB,EAAwB;AACpBb,MAAAA,MAAM,CAACW,IAAP,CAAY,OAAZ;AACH;;AAEDV,IAAAA,SAAS,CAACD,MAAD,CAAT;;AAEA,QAAIA,MAAM,CAACmC,MAAP,GAAgB,CAApB,EAAuB;AACnB,aAAO,KAAP;AACH,KAZyB,CAc1B;;;AACA,UAAMC,IAAI,GAAG,IAAIC,QAAJ,CAAaP,GAAG,CAACC,MAAjB,CAAb;AACA,UAAMO,OAAO,GAAGC,MAAM,CAACC,WAAP,CAAmBJ,IAAI,CAACK,OAAL,EAAnB,CAAhB;AACA,UAAMC,SAAS,GAAG,IAAIC,OAAJ,EAAlB;AACAD,IAAAA,SAAS,CAACE,MAAV,CAAiB,cAAjB,EAAiC,kBAAjC;AACAF,IAAAA,SAAS,CAACE,MAAV,CAAiB,eAAjB,EAAkC,YAAYjD,KAAK,CAACc,GAApD;AAEA,UAAMoC,cAAc,GAAG;AACvBC,MAAAA,MAAM,EAAE,MADe;AAEvBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeX,OAAf,CAFiB;AAGvBY,MAAAA,OAAO,EAAER;AAHc,KAAvB;AAKAtB,IAAAA,KAAK,CAAC,0CAAD,EAA6CyB,cAA7C,CAAL,CACCxB,IADD,CACOC,QAAD,IAAcA,QAAQ,CAACE,IAAT,EADpB,EAECH,IAFD,CAEOe,IAAD,IAAU;AACZ,UAAIA,IAAI,CAACtC,KAAT,EAAgB;AACZK,QAAAA,QAAQ,CAAC;AACLD,UAAAA,KAAK,EAAE;AAAEE,YAAAA,IAAI,EAAE,cAAR;AAAwBC,YAAAA,OAAO,EAAE+B,IAAI,CAACtC,KAAL,CAAWO;AAA5C;AADF,SAAD,CAAR;AAGH,OAJD,MAIO;AACHV,QAAAA,KAAK,CAACe,OAAN,CAAcC,IAAd,CAAmB;AACfC,UAAAA,QAAQ,EAAE;AADK,SAAnB;AAGH;AACJ,KAZD;AAaH,GAvCD;;AAyCA,QAAMuC,aAAa,GAAIC,CAAD,IAAO;AACzB3D,IAAAA,YAAY,CAAC;AACToB,MAAAA,KAAK,EAAE,eADE;AAETR,MAAAA,OAAO,EAAE,eAFA;AAGTgD,MAAAA,OAAO,EAAE,CACP;AACEC,QAAAA,KAAK,EAAE,KADT;AAEEC,QAAAA,OAAO,EAAE,MAAM;AACb;AACA,gBAAMb,SAAS,GAAG,IAAIC,OAAJ,EAAlB;AACAD,UAAAA,SAAS,CAACE,MAAV,CAAiB,cAAjB,EAAiC,kBAAjC;AACAF,UAAAA,SAAS,CAACE,MAAV,CAAiB,eAAjB,EAAkC,YAAYjD,KAAK,CAACc,GAApD;AAEAW,UAAAA,KAAK,CACH,gDACExB,KAAK,CAACW,EAFL,EAGH;AACEuC,YAAAA,MAAM,EAAE,KADV;AAEEI,YAAAA,OAAO,EAAER;AAFX,WAHG,CAAL,CAQGrB,IARH,CAQSC,QAAD,IAAcA,QAAQ,CAACE,IAR/B,EASGH,IATH,CASSe,IAAD,IAAU;AACd,gBAAIA,IAAI,CAACtC,KAAT,EAAgB;AACdK,cAAAA,QAAQ,CAAC;AAACC,gBAAAA,IAAI,EAAE,cAAP;AAAuBC,gBAAAA,OAAO,EAAE+B,IAAI,CAACtC,KAAL,CAAWO;AAA3C,eAAD,CAAR;AACD,aAFD,MAEO;AACLF,cAAAA,QAAQ,CAAC;AAACC,gBAAAA,IAAI,EAAE,eAAP;AAAwBC,gBAAAA,OAAO,EAAE;AAAjC,eAAD,CAAR;AACAV,cAAAA,KAAK,CAACe,OAAN,CAAcC,IAAd,CAAmB;AACjBC,gBAAAA,QAAQ,EAAE;AADO,eAAnB;AAGD;AACF,WAlBH;AAmBD;AA3BH,OADO,EA8BP;AACE0C,QAAAA,KAAK,EAAE,IADT;AAEEC,QAAAA,OAAO,EAAE,MAAM,CAAE;AAFnB,OA9BO;AAHA,KAAD,CAAZ;AAuCH,GAxCD;;AA0CA,WAASC,QAAT,CAAkBC,GAAlB,EAAuB;AACnB,WAAOzD,MAAM,CAAC0D,OAAP,CAAeD,GAAf,MAAwB,CAAC,CAAhC;AACH;;AAED,MAAI3D,KAAK,KAAK,IAAd,EAAoB;AAChB,wBAAO;AAAA,4BAAaA,KAAK,CAACO,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFD,MAEO;AACH,wBACI,QAAC,QAAD;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AACE,QAAA,SAAS,EAAEH,KAAK,CAACE,IADnB;AAEE,QAAA,YAAY,EAAEF,KAAK,CAACG;AAFtB;AAAA;AAAA;AAAA;AAAA,cAFF,eAME;AAAA;AAAA;AAAA;AAAA,cANF,eAOE;AAAM,QAAA,QAAQ,EAAE4B,YAAhB;AAAA,gCACE;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,IAAI,EAAC,IAFP;AAGE,UAAA,EAAE,EAAC,IAHL;AAIE,UAAA,KAAK,EAAErC,KAAK,CAACW,EAJf;AAKE,UAAA,QAAQ,EAAEX,KAAK,CAACW;AALlB;AAAA;AAAA;AAAA;AAAA,gBADF,eASE,QAAC,KAAD;AACE,UAAA,KAAK,EAAE,OADT;AAEE,UAAA,SAAS,EAAEiD,QAAQ,CAAC,OAAD,CAAR,GAAoB,YAApB,GAAmC,EAFhD;AAGE,UAAA,IAAI,EAAE,MAHR;AAIE,UAAA,IAAI,EAAE,OAJR;AAKE,UAAA,KAAK,EAAE5D,KAAK,CAACiB,KALf;AAME,UAAA,YAAY,EAAEgB,YAAY,CAAC,OAAD,CAN5B;AAOE,UAAA,QAAQ,EAAE2B,QAAQ,CAAC,OAAD,CAAR,GAAoB,aAApB,GAAoC,QAPhD;AAQE,UAAA,QAAQ,EAAE;AARZ;AAAA;AAAA;AAAA;AAAA,gBATF,eAoBE,QAAC,KAAD;AACE,UAAA,KAAK,EAAE,cADT;AAEE,UAAA,IAAI,EAAE,MAFR;AAGE,UAAA,IAAI,EAAE,cAHR;AAIE,UAAA,KAAK,EAAE5D,KAAK,CAACkB,YAJf;AAKE,UAAA,YAAY,EAAEe,YAAY,CAAC,cAAD;AAL5B;AAAA;AAAA;AAAA;AAAA,gBApBF,eA4BE,QAAC,KAAD;AACE,UAAA,KAAK,EAAE,SADT;AAEE,UAAA,IAAI,EAAE,MAFR;AAGE,UAAA,IAAI,EAAE,SAHR;AAIE,UAAA,KAAK,EAAEjC,KAAK,CAAC+D,OAJf;AAKE,UAAA,YAAY,EAAE9B,YAAY,CAAC,SAAD;AAL5B;AAAA;AAAA;AAAA;AAAA,gBA5BF,eAoCE,QAAC,MAAD;AACE,UAAA,KAAK,EAAE,aADT;AAEE,UAAA,IAAI,EAAE,aAFR;AAGE,UAAA,OAAO,EAAEvB,WAHX;AAIE,UAAA,KAAK,EAAEV,KAAK,CAACmB,WAJf;AAKE,UAAA,YAAY,EAAEc,YAAY,CAAC,aAAD,CAL5B;AAME,UAAA,WAAW,EAAC;AANd;AAAA;AAAA;AAAA;AAAA,gBApCF,eA6CE,QAAC,KAAD;AACE,UAAA,KAAK,EAAE,QADT;AAEE,UAAA,IAAI,EAAE,MAFR;AAGE,UAAA,IAAI,EAAE,QAHR;AAIE,UAAA,KAAK,EAAEjC,KAAK,CAACoB,MAJf;AAKE,UAAA,YAAY,EAAEa,YAAY,CAAC,QAAD;AAL5B;AAAA;AAAA;AAAA;AAAA,gBA7CF,eAqDE,QAAC,QAAD;AACE,UAAA,KAAK,EAAE,aADT;AAEE,UAAA,IAAI,EAAE,aAFR;AAGE,UAAA,KAAK,EAAEjC,KAAK,CAACqB,WAHf;AAIE,UAAA,IAAI,EAAE,GAJR;AAKE,UAAA,YAAY,EAAEY,YAAY,CAAC,aAAD;AAL5B;AAAA;AAAA;AAAA;AAAA,gBArDF,eA6DE;AAAA;AAAA;AAAA;AAAA,gBA7DF,eA+DE;AAAQ,UAAA,SAAS,EAAC,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA/DF,eAgEE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,QAAT;AAAkB,UAAA,SAAS,EAAC,sBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhEF,EAmEGjC,KAAK,CAACW,EAAN,GAAW,CAAX,iBACC;AACE,UAAA,IAAI,EAAC,IADP;AAEE,UAAA,OAAO,EAAE,MAAM4C,aAAa,EAF9B;AAGE,UAAA,SAAS,EAAC,qBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBApEJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAuFH;AACJ;;GA5OQzD,a;;KAAAA,a;AA8OT,eAAeA,aAAf","sourcesContent":["import React, { useEffect, useState, Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./EditMovie.css\";\nimport Input from \"./form-components/Input\";\nimport Select from \"./form-components/Select\";\nimport TextArea from \"./form-components/TextArea\";\nimport Alert from \"./ui-components/Alert\";\nimport { confirmAlert } from \"react-confirm-alert\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\n\nfunction EditMovieFunc(props) {\n    const [movie, setMovie] = useState({});\n    const [error, setError] = useState(null);\n    const [errors, setErrors] = useState([]);\n    const [alert, setAlert] = useState({type: \"d-none\", message: \"\"});\n    const mpaaOptions = [\n        { id: \"G\", value: \"G\" },\n        { id: \"PG\", value: \"PG\" },\n        { id: \"PG13\", value: \"PG13\" },\n        { id: \"R\", value: \"R\" },\n        { id: \"NC17\", value: \"NC17\" },\n    ];\n\n    useEffect(() => {\n        if (props.jwt === \"\") {\n            props.history.push({\n                pathname: \"/login\",\n            });\n            return;\n        }\n\n        setMovie({\n            id: 0,\n            title: \"\",\n            release_date: \"\",\n            mpaa_rating: \"\",\n            rating: \"\",\n            description: \"\",\n        });\n\n        const id = props.match.params.id;\n        if (id > 0) {\n            fetch(\"http://localhost:4000/v1/movie/\" + id)\n              .then((response) => {\n                if (response.status !== 200) {\n                    setError(\"Invalid response: \", response.status);\n                } else {\n                    setError(null);\n                }\n                return response.json();\n              })\n              .then((json) => {\n                const releaseDate = new Date(json.movie.release_date);\n                json.movie.release_date = releaseDate.toISOString().split(\"T\")[0];\n                setMovie(json.movie);\n              });\n          }\n    }, [props.history, props.jwt, props.match.params.id])\n\n    const handleChange = () => (evt) => {\n        let value = evt.target.value;\n        let name = evt.target.name;\n        setMovie({\n            ...movie,\n            [name]: value,\n        });\n    }\n\n    const handleSubmit = (evt) => {\n        evt.preventDefault();\n        // do validation\n        let errors = [];\n        if (movie.title === \"\") {\n            errors.push(\"title\");\n        }\n\n        setErrors(errors)\n\n        if (errors.length > 0) {\n            return false;\n        }\n\n        // we passed, so post info\n        const data = new FormData(evt.target);\n        const payload = Object.fromEntries(data.entries());\n        const myHeaders = new Headers();\n        myHeaders.append(\"Content-Type\", \"application/json\");\n        myHeaders.append(\"Authorization\", \"Bearer \" + props.jwt);\n\n        const requestOptions = {\n        method: \"POST\",\n        body: JSON.stringify(payload),\n        headers: myHeaders,\n        };\n        fetch(\"http://localhost:4000/v1/admin/editmovie\", requestOptions)\n        .then((response) => response.json())\n        .then((data) => {\n            if (data.error) {\n                setAlert({\n                    alert: { type: \"alert-danger\", message: data.error.message},\n                })\n            } else {\n                props.history.push({\n                    pathname: \"/admin\",\n                });\n            }\n        });\n    }\n\n    const confirmDelete = (e) => {\n        confirmAlert({\n            title: \"Delete Movie?\",\n            message: \"Are you sure?\",\n            buttons: [\n              {\n                label: \"Yes\",\n                onClick: () => {\n                  // delete the movie\n                  const myHeaders = new Headers();\n                  myHeaders.append(\"Content-Type\", \"application/json\");\n                  myHeaders.append(\"Authorization\", \"Bearer \" + props.jwt);\n     \n                  fetch(\n                    \"http://localhost:4000/v1/admin/deletemovie/\" +\n                      movie.id,\n                    {\n                      method: \"GET\",\n                      headers: myHeaders,\n                    }\n                  )\n                    .then((response) => response.json)\n                    .then((data) => {\n                      if (data.error) {\n                        setAlert({type: \"alert-danger\", message: data.error.message});\n                      } else {\n                        setAlert({type: \"alert-success\", message: \"Movie deleted!\"});\n                        props.history.push({\n                          pathname: \"/admin\",\n                        });\n                      }\n                    });\n                },\n              },\n              {\n                label: \"No\",\n                onClick: () => {},\n              },\n            ],\n          });\n    }\n\n    function hasError(key) {\n        return errors.indexOf(key) !== -1;\n    }\n\n    if (error !== null) {\n        return <div>Error: {error.message}</div>;\n    } else {\n        return (\n            <Fragment>\n              <h2>Add/Edit Movie</h2>\n              <Alert\n                alertType={alert.type}\n                alertMessage={alert.message}\n              />\n              <hr />\n              <form onSubmit={handleSubmit}>\n                <input\n                  type=\"hidden\"\n                  name=\"id\"\n                  id=\"id\"\n                  value={movie.id}\n                  onChange={movie.id}\n                />\n   \n                <Input\n                  title={\"Title\"}\n                  className={hasError(\"title\") ? \"is-invalid\" : \"\"}\n                  type={\"text\"}\n                  name={\"title\"}\n                  value={movie.title}\n                  handleChange={handleChange(\"title\")}\n                  errorDiv={hasError(\"title\") ? \"text-danger\" : \"d-none\"}\n                  errorMsg={\"Please enter a title\"}\n                />\n   \n                <Input\n                  title={\"Release Date\"}\n                  type={\"date\"}\n                  name={\"release_date\"}\n                  value={movie.release_date}\n                  handleChange={handleChange(\"release_date\")}\n                />\n   \n                <Input\n                  title={\"Runtime\"}\n                  type={\"text\"}\n                  name={\"runtime\"}\n                  value={movie.runtime}\n                  handleChange={handleChange(\"runtime\")}\n                />\n   \n                <Select\n                  title={\"MPAA Rating\"}\n                  name={\"mpaa_rating\"}\n                  options={mpaaOptions}\n                  value={movie.mpaa_rating}\n                  handleChange={handleChange(\"mpaa_rating\")}\n                  placeholder=\"Choose...\"\n                />\n   \n                <Input\n                  title={\"Rating\"}\n                  type={\"text\"}\n                  name={\"rating\"}\n                  value={movie.rating}\n                  handleChange={handleChange(\"rating\")}\n                />\n   \n                <TextArea\n                  title={\"Description\"}\n                  name={\"description\"}\n                  value={movie.description}\n                  rows={\"3\"}\n                  handleChange={handleChange(\"description\")}\n                />\n   \n                <hr />\n   \n                <button className=\"btn btn-primary\">Save</button>\n                <Link to=\"/admin\" className=\"btn btn-warning ms-1\">\n                  Cancel\n                </Link>\n                {movie.id > 0 && (\n                  <a\n                    href=\"#!\"\n                    onClick={() => confirmDelete()}\n                    className=\"btn btn-danger ms-1\"\n                  >\n                    Delete\n                  </a>\n                )}\n              </form>\n            </Fragment>\n          );\n    }\n}\n\nexport default EditMovieFunc;"]},"metadata":{},"sourceType":"module"}