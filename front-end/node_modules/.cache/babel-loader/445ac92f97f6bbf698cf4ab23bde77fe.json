{"ast":null,"code":"var _jsxFileName = \"/home/aljani/projects/react_go/front-end/src/components/OneMovieGraphQL.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class OneMovieGraphQL extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movie: {},\n      isLoaded: false,\n      error: null\n    };\n  }\n\n  componentDidMount() {\n    const payload = `\n    {\n        movie(id: ${this.props.match.params.id}) {\n            id\n            title\n            runtime\n            year\n            description\n            release_date\n            rating\n            mpaa_rating\n            poster\n        }\n    }\n    `;\n    const myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    const requestOptions = {\n      method: \"POST\",\n      body: payload,\n      headers: myHeaders\n    };\n    fetch(`${process.env.REACT_APP_API_URL}/v1/graphql`, requestOptions).then(response => response.json()).then(data => {\n      this.setState({\n        movie: data.data.movie,\n        isLoaded: true\n      });\n    });\n  }\n\n  render() {\n    const {\n      movie,\n      isLoaded,\n      error\n    } = this.state;\n\n    if (movie.genres) {\n      movie.genres = Object.values(movie.genres);\n    } else {\n      movie.genres = [];\n    }\n\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Error: \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 14\n      }, this);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Movie: \", movie.title, \" (\", movie.year, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), movie.poster !== \"\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `https://image.tmdb.org/t/p/w200${movie.poster}`,\n            alt: \"poster\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"float-start\",\n          children: /*#__PURE__*/_jsxDEV(\"small\", {\n            children: [\"Rating: \", movie.mpaa_rating]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"float-end\",\n          children: movie.genres.map((m, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"badge bg-secondary me-1\",\n            children: m\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"clearfix\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-compact table-striped\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Title:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: movie.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Description:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: movie.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Run time:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [movie.runtime, \" minutes\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n}","map":{"version":3,"sources":["/home/aljani/projects/react_go/front-end/src/components/OneMovieGraphQL.js"],"names":["React","Component","Fragment","OneMovieGraphQL","state","movie","isLoaded","error","componentDidMount","payload","props","match","params","id","myHeaders","Headers","append","requestOptions","method","body","headers","fetch","process","env","REACT_APP_API_URL","then","response","json","data","setState","render","genres","Object","values","message","title","year","poster","mpaa_rating","map","m","index","description","runtime"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\n\nexport default class OneMovieGraphQL extends Component {\n  state = { movie: {}, isLoaded: false, error: null };\n\n  componentDidMount() {\n    const payload = `\n    {\n        movie(id: ${this.props.match.params.id}) {\n            id\n            title\n            runtime\n            year\n            description\n            release_date\n            rating\n            mpaa_rating\n            poster\n        }\n    }\n    `;\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    const requestOptions = {\n      method: \"POST\",\n      body: payload,\n      headers: myHeaders,\n    };\n\n    fetch(`${process.env.REACT_APP_API_URL}/v1/graphql`, requestOptions)\n      .then((response) => response.json())\n      .then((data) => {\n        this.setState({\n          movie: data.data.movie,\n          isLoaded: true,\n        });\n      });\n  }\n\n  render() {\n    const { movie, isLoaded, error } = this.state;\n    if (movie.genres) {\n      movie.genres = Object.values(movie.genres);\n    } else {\n      movie.genres = [];\n    }\n\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <p>Loading...</p>;\n    } else {\n      return (\n        <Fragment>\n          <h2>\n            Movie: {movie.title} ({movie.year}) \n          </h2>\n\n          {movie.poster !== \"\" && (\n              <div>\n                  <img src={`https://image.tmdb.org/t/p/w200${movie.poster}`} alt=\"poster\" />\n              </div>\n          )}\n\n          <div className=\"float-start\">\n            <small>Rating: {movie.mpaa_rating}</small>\n          </div>\n\n          \n          <div className=\"float-end\">\n            {movie.genres.map((m, index) => (\n              <span className=\"badge bg-secondary me-1\" key={index}>\n                {m}\n              </span>\n            ))}\n          </div>\n          <div className=\"clearfix\"></div>\n\n          <hr />\n\n          <table className=\"table table-compact table-striped\">\n            <thead></thead>\n            <tbody>\n              <tr>\n                <td>\n                  <strong>Title:</strong>\n                </td>\n                <td>{movie.title}</td>\n              </tr>\n              <tr>\n                <td>\n                  <strong>Description:</strong>\n                </td>\n                <td>{movie.description}</td>\n              </tr>\n              <tr>\n                <td>\n                  <strong>Run time:</strong>\n                </td>\n                <td>{movie.runtime} minutes</td>\n              </tr>\n            </tbody>\n          </table>\n        </Fragment>\n      );\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}