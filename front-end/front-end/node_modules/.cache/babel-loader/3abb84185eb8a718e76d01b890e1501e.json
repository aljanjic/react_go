{"ast":null,"code":"var _jsxFileName = \"/home/aljani/projects/react_go/front-end_last/front-end/src/components/OneGenreFunc.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, Fragment } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction OneGenreFunc(props) {\n  _s();\n\n  let [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  let [genreName, setGenreName] = useState(\"\");\n  useEffect(() => {\n    fetch(\"http://localhost:4000/v1/movies/\" + props.match.params.id).then(response => {\n      if (response.status !== 200) {\n        setError(\"Invalid response: \", response.status);\n      } else {\n        setError(null);\n      }\n\n      return response.json();\n    }).then(json => {\n      console.log(\"Value\", props.location.genreName);\n      setGenreName(props.location.genreName);\n      setMovies(json.movies);\n    });\n  }, [props.match.params.id, props.location.genreName]);\n\n  if (!movies) {\n    movies = [];\n  }\n\n  if (error !== null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 16\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Genre: \", genreName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-group\",\n        children: movies.map(m => /*#__PURE__*/_jsxDEV(Link, {\n          to: `/movies/${m.id}`,\n          className: \"list-group-item list-group-item-action\",\n          children: m.title\n        }, m.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 19\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(OneGenreFunc, \"yC9NNTarpVduDqKzuV99M/EAwA4=\");\n\n_c = OneGenreFunc;\nexport default OneGenreFunc;\n\nvar _c;\n\n$RefreshReg$(_c, \"OneGenreFunc\");","map":{"version":3,"sources":["/home/aljani/projects/react_go/front-end_last/front-end/src/components/OneGenreFunc.js"],"names":["React","useEffect","useState","Fragment","Link","OneGenreFunc","props","movies","setMovies","error","setError","genreName","setGenreName","fetch","match","params","id","then","response","status","json","console","log","location","message","map","m","title"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,EAAoCC,QAApC,QAAmD,OAAnD;AACA,SAASC,IAAT,QAAqB,kBAArB;;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AACzB,MAAI,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,IAAD,CAAlC;AACA,MAAI,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,EAAD,CAAxC;AAGAD,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,KAAK,CAAC,qCAAqCP,KAAK,CAACQ,KAAN,CAAYC,MAAZ,CAAmBC,EAAzD,CAAL,CACDC,IADC,CACKC,QAAD,IAAc;AAClB,UAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3BT,QAAAA,QAAQ,CAAC,oBAAD,EAAuBQ,QAAQ,CAACC,MAAhC,CAAR;AACD,OAFD,MAEO;AACHT,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACH;;AACD,aAAOQ,QAAQ,CAACE,IAAT,EAAP;AACD,KARC,EASDH,IATC,CASKG,IAAD,IAAU;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBhB,KAAK,CAACiB,QAAN,CAAeZ,SAApC;AACFC,MAAAA,YAAY,CAACN,KAAK,CAACiB,QAAN,CAAeZ,SAAhB,CAAZ;AACAH,MAAAA,SAAS,CAACY,IAAI,CAACb,MAAN,CAAT;AACD,KAbC;AAcH,GAfQ,EAeN,CAACD,KAAK,CAACQ,KAAN,CAAYC,MAAZ,CAAmBC,EAApB,EAAwBV,KAAK,CAACiB,QAAN,CAAeZ,SAAvC,CAfM,CAAT;;AAmBA,MAAI,CAACJ,MAAL,EAAa;AACTA,IAAAA,MAAM,GAAG,EAAT;AACH;;AAED,MAAIE,KAAK,KAAK,IAAd,EAAoB;AAChB,wBAAO;AAAA,4BAAaA,KAAK,CAACe,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFD,MAEO;AACH,wBACI,QAAC,QAAD;AAAA,8BACE;AAAA,8BAAYb,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,kBACGJ,MAAM,CAACkB,GAAP,CAAYC,CAAD,iBACV,QAAC,IAAD;AAEE,UAAA,EAAE,EAAG,WAAUA,CAAC,CAACV,EAAG,EAFtB;AAGE,UAAA,SAAS,EAAC,wCAHZ;AAAA,oBAKGU,CAAC,CAACC;AALL,WACOD,CAAC,CAACV,EADT;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAgBH;AACJ;;GAjDQX,Y;;KAAAA,Y;AAmDT,eAAeA,YAAf","sourcesContent":["import React, {useEffect, useState, Fragment} from 'react'\nimport { Link } from \"react-router-dom\"\n\nfunction OneGenreFunc(props) {\n    let [movies, setMovies] = useState([]);\n    const [error, setError] = useState(null);\n    let [genreName, setGenreName] = useState(\"\");\n    \n\n    useEffect(() => {\n        fetch(\"http://localhost:4000/v1/movies/\" + props.match.params.id)\n      .then((response) => {\n        if (response.status !== 200) {\n          setError(\"Invalid response: \", response.status);\n        } else {\n            setError(null);\n        }\n        return response.json();\n      })\n      .then((json) => {\n          console.log(\"Value\", props.location.genreName);\n        setGenreName(props.location.genreName);\n        setMovies(json.movies);\n      });\n    }, [props.match.params.id, props.location.genreName]);\n\n    \n\n    if (!movies) {\n        movies = [];\n    }\n\n    if (error !== null) {\n        return <div>Error: {error.message}</div>;\n    } else {\n        return (\n            <Fragment>\n              <h2>Genre: {genreName}</h2>\n              <div className=\"list-group\">\n                {movies.map((m) => (\n                  <Link\n                    key={m.id}\n                    to={`/movies/${m.id}`}\n                    className=\"list-group-item list-group-item-action\"\n                  >\n                    {m.title}\n                  </Link>\n                ))}\n              </div>\n            </Fragment>\n          );\n    }\n}\n\nexport default OneGenreFunc;"]},"metadata":{},"sourceType":"module"}